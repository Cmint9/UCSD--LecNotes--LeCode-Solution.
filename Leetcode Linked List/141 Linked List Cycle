Leetcode 141 Linked list cycle 

" There is a cycle in Linked List if some node in the list can be reached again by continuously following the "next" pointer. 
" Pos" is used to denoted index of node"
" tail's "next" pointer is connected to. 

Class solution:
  def hasCycle(self, head = ListNode -> bool:
    if Not head:
       return False
    slow = head
    fast = head.next
    while slow !=  fast:
      if not fast or not fast.next:
        return False
      slow = slow.next
      fast = fast.next.next
    return True



# Algorithm:
Initialize an empty set for the visited node starting from the head node.
For each node:
a: if in the set, return True
b: otherwise, add to the set and move to the next node
If end list(none) return False

