# Problem 53 description: Maximum Subarray

Given an integer array nums, find the subarray with the largest sum, and return its sum.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:

Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.
Example 3:

Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.
 

Constraints:

1 <= nums.length <= 105
-104 <= nums[i] <= 104


# ## solution and analysis

We need to loop through the whole list and check the biggest value, then add it up.
class Solution:
    def maxSubArray(self, nums):
       # Initiate 
        res = maxEnd = nums[0]
       # Loop through the whole list 
        for i in range(1, len(nums)):
           # find the max value 
            maxEnd = max(maxEnd + nums[i], nums[i])
            res = max(res, maxEnd)
        return res


