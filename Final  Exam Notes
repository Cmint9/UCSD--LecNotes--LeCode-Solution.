## This file is for the wrong problem in the Final exam notes： 

Question 1: The heuristic used by the Python knapsack_01() function may _____.
Correct Answer: Leave the knapsack empty 
                exceed the knapsack's weight limit
                Take multiple copies of the same item 
You answered: take a fractional portion of an item

Reason for pick the wrong answer: "Heuristic do the knapsake_01(), we need to the leave the knapsack empty.

Question 2: The optimized Python longest_common_substring() function has ______ space complexity.
                O(1)
                O(log2(len(str1)))
Correct Answer: O(len(str2))
You Answered:  O(len(str1)·len(str2))


Question 3: In a tree representing a file system, _____.
Group of answer choices

leaf nodes represent only empty directories

leaf nodes represent only non-empty directories

leaf nodes represent either files or empty directories

leaf nodes represent only files

Answer: lead nodes represent either files or empty directions

In a fule system tree, leaf nodes can be files ( which have no children) or empty directories.

Question 4: Which of the following is a valid reason for resizing a hash table?
Group of answer choices

Adding more than 1 item in a bucket
Load factor is greater than 0.5
Load factor is less than 0.1
More than 5 items in a hash table

Answer: Load factor is greater than 0.5
Resaon: A common reason to resize a hash table is when the lad factor becomes too high.
This helps reduce collisions and maintain efficient operations. 



Question 5: Which XXX completes the multiplicative string hash function?
HashMutliplicative(string key) {
   stringHash = InitialValue
   for (each character strChar in key) {
      XXX
   }
   return stringHash % N
}
Group of answer choices

stringHash = (stringHash + HashMultiplier) + strChar
stringHash = (stringHash * HashMultiplier) + strChar
stringHash = (stringHash + HashMultiplier) * strChar
stringHash = (stringHash * HashMultiplier) * strChar

Answer: stringHash = (stringHash * HashMultiplier) + strChar
Reason: Multiply the current hash by a multiplier ( it is usually be a prime number) 
      Add the ASCII value ( or code) of the current character




